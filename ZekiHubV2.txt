print("Sus")
-- Values
local DCToggle = true
local ESPToggle = false
local ESPOutline = Color3.fromRGB(120,0,255)
local ESPFill = Color3.fromRGB(170,0,255)
local ESPOutTrans = 0
local ESPFillTrans = 0.5
local Target = nil
local Player = game.Players.LocalPlayer
local Characters = workspace.Live
-- Funtions / Services
local CAS = game:GetService("ContextActionService")
local CoreGui = game:GetService("StarterGui")
-- Tatsumaki oneshots 
function TatsuPullOneShot()
local _CFrame = CFrame.new(0,100000000000,100000000000)
Player.Character.Humanoid:EquipTool(game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Crushing Pull"))
Player.Character.Humanoid:UnequipTools()
local SavedP = Player.Character.HumanoidRootPart.CFrame
task.wait(0.5)
Player.Character.HumanoidRootPart.CFrame = _CFrame 
task.wait(0.5)
Player.Character.HumanoidRootPart.CFrame = SavedP
end
-- 2
function TatsuOneshot2() -- Beta
print("Sus2")
local SavedP2 = Player.Character.HumanoidRootPart.CFrame
local Player = game.Players.LocalPlayer
Player.Character.HumanoidRootPart.CFrame = workspace.Live:FindFirstChild(Target).HumanoidRootPart.CFrame * CFrame.new(0,0,15)
local _CFrame = CFrame.new(0,0,1000000)
task.wait(0.25)
Player.Character.Humanoid:EquipTool(game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Crushing Pull"))
Player.Character.Humanoid:UnequipTools()

task.wait(0.5)
Player.Character.HumanoidRootPart.CFrame = _CFrame 
task.wait(0.5)
Player.Character.HumanoidRootPart.CFrame = SavedP2
end
-- Tatsumaki 2
function TatsuPullTeleport(CF)
local _CFrame = CF
task.wait(0.25)
Player.Character.Humanoid:EquipTool(game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Crushing Pull"))
Player.Character.Humanoid:UnequipTools()
local SavedP = Player.Character.HumanoidRootPart.CFrame
task.wait(0.5)
Player.Character.HumanoidRootPart.CFrame = _CFrame 
task.wait(0.5)
--Player.Character.HumanoidRootPart.CFrame = SavedP
end 
-- ESP
function ESP(Destroybool)
if Prints then
print(Destroybool)
end
local V2
   if Destroybool then
       V2 = false
    else
       V2 = true
   end
ESPToggle = V2
    for i,k in pairs(workspace.Live:GetChildren()) do
        if Prints then print(k) end
        if k ~= Player.Character and k:FindFirstChild("Humanoid") then
            if Prints then print(k) end
            if Destroybool then
                if k:FindFirstChild("ESPHL") then
if Prints then print(k.ESPHL:GetFullName().." Destroying") end
                    k.ESPHL:Destroy()
                end
            else
                if k:FindFirstChild("ESPHL") then
                   k.ESPHL.OutlineColor = ESPOutline
                   k.ESPHL.FillColor = ESPFill
                   k.ESPHL.OutlineTransparency = ESPOutTrans
                   k.ESPHL.FillTransparency = ESPFillTrans
                   if Prints then print(k.ESPHL:GetFullName().." Updating") end
                else
                    local highlight = Instance.new("Highlight")
                    highlight.Parent = k
                    highlight.Name = "ESPHL"
                    highlight.OutlineColor = ESPOutline
                    highlight.FillColor = ESPFill
                    k.ESPHL.OutlineTransparency = ESPOutTrans
                   k.ESPHL.FillTransparency = ESPFillTrans
                    if Prints then print(highlight:GetFullName().." Creating") end
                end
            end
        end
    end
end
function Saved(k)
local highlight = Instance.new("Highlight")
highlight.Parent = k
highlight.Name = "ESPHL"
highlight.OutlineColor = ESPOutline
highlight.FillColor = ESPFill
end
-- Get death counter
function GetDeathCounter2(Object)
if Object.Name == "Counter" and Object.Parent ~= Player.Character and DCToggle then
    print(Object:GetFullName())
CoreGui:SetCore("SendNotification", {
	Title = "Death Counter";
	Text = tostring(Object.Parent.Name.." "..math.floor((Object.Parent:FindFirstChild("HumanoidRootPart").Position - Player.Character.HumanoidRootPart.Position).Magnitude).." studs from you");
	Duration = 10;
})
end
end
-- Checking for death counter
function Check(Character)
Character.ChildAdded:Connect(function(k2)
GetDeathCounter2(k2)
end)
end
-- Anti death counter
for i,k in pairs(workspace.Live:GetChildren()) do
Check(k)
end
workspace.Live.ChildAdded:Connect(function(Object)
Check(Object)
end)

-- Saitama ult
-- create buildboard
function BillBoard(_Parent,Toggle1)
-- Gui to Lua
-- Version: 3.2
local Path = _Parent:FindFirstChild("Head")
-- Instances:
if Toggle1 then
if not Path:FindFirstChild("SaitamaUlt") then
local BillboardGui = Instance.new("BillboardGui")
local Frame = Instance.new("Frame")
local TextLabel = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local UICorner = Instance.new("UICorner")
local UIScale = Instance.new("UIScale")

--Properties:

BillboardGui.Name = "SaitamaUlt"
BillboardGui.Parent = Path
BillboardGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
BillboardGui.Active = true
BillboardGui.AlwaysOnTop = true
BillboardGui.ExtentsOffset = Vector3.new(0, 2.5, 0)
BillboardGui.LightInfluence = 1.000
BillboardGui.MaxDistance = math.huge
BillboardGui.Size = UDim2.new(24, 0, 12, 0)

Frame.Parent = BillboardGui
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BackgroundTransparency = 1.000
Frame.BorderColor3 = Color3.fromRGB(255, 0, 0)
Frame.BorderSizePixel = 0
Frame.Size = UDim2.new(1, 0, 1, 0)

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(1, 0, 1, 0)
TextLabel.Font = Enum.Font.Garamond
TextLabel.Text = "Ultimate"
TextLabel.TextColor3 = Color3.fromRGB(167, 0, 0)
TextLabel.TextScaled = true
TextLabel.TextSize = 56.000
TextLabel.TextStrokeTransparency = 0
TextLabel.TextWrapped = true

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 0, 0)), ColorSequenceKeypoint.new(0.38, Color3.fromRGB(125, 0, 0)), ColorSequenceKeypoint.new(0.50, Color3.fromRGB(67, 67, 67)), ColorSequenceKeypoint.new(0.62, Color3.fromRGB(125, 0, 0)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 0, 0))}
UIGradient.Rotation = 75
UIGradient.Parent = TextLabel

UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = Frame

UIScale.Parent = BillboardGui
end
elseif Toggle1 == false then
if Path:FindFirstChild("SaitamaUlt") then
Path:FindFirstChild("SaitamaUlt"):Destroy()
end
end
end
function GetDeathCounter3(Object)
if DCToggle == true then
local SS = {"Death Counter","Table Flip","Serious Punch","Omni Directional Punch"}
if table.find(SS,Object.Name) and Object.Parent.Parent ~= Player then
--print(Object:GetFullName())
BillBoard(Characters:FindFirstChild(Object.Parent.Parent.Name),true)
else
BillBoard(Characters:FindFirstChild(Object.Parent.Parent.Name),false)
end
end
end
-- Checking for saitama ult
function Check2(Player)
Player.Backpack.ChildAdded:Connect(function(k2)
GetDeathCounter3(k2)
end)
end
-- Anti saitama ult
for i,k in pairs(game.Players:GetChildren()) do
if k:IsA("Player") then
Check2(k)
end
end
game.Players.ChildAdded:Connect(function(k)
if k:IsA("Player") then
Check2(k)
end
end)
-- UI library
local ArrayField = loadstring(game:HttpGet('https://raw.githubusercontent.com/HegpIsAfriki/-/main/Arrayfield%20mod'))()

local Window = ArrayField:CreateWindow({
   Name = "The Strongest Battlegrounds",
   LoadingTitle = "Zeki hub",
   LoadingSubtitle = "by Zekinelga",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = "ZekiHub", -- Create a custom folder for your hub/game
      FileName = "The Strongest Battlegrounds"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided",
      FileName = "Key", -- It is recommended to use something unique as other scripts using ArrayField may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like ArrayField to get the key from
      Actions = {
            [1] = {
                Text = 'Skibidi Ohio Sigma',
                OnPress = function()
                    
                end,
                }
            },
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})
local Tab = Window:CreateTab("Main", 4483362458)
local Section = Tab:CreateSection("OneShots",true)
local Toggle = Tab:CreateToggle({
   Name = "Tatsumaki pull ( E )",
   CurrentValue = false,
   Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   if Value then
    CAS:BindAction("TatsuOneShot",TatsuPullOneShot,false,Enum.KeyCode.E)
    else
    CAS:UnbindAction("TatsuOneShot")
   end
   end,
})
local Section = Tab:CreateSection("ESP",true)
local ColorPicker = Tab:CreateColorPicker({
    Name = "ESP outline",
    Color = Color3.fromRGB(120,0,255),
    Flag = "ColorPicker1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
         ESPOutline = Value
         if ESPToggle then
         ESP(false)
         end
    end
})
local ColorPicker = Tab:CreateColorPicker({
    Name = "ESP fill",
    Color = Color3.fromRGB(170,0,255),
    Flag = "ColorPicker1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
         ESPFill = Value
         if ESPToggle then
         ESP(false)
         end
    end
})
local Slider = Tab:CreateSlider({
   Name = "Outline transparency",
   Range = {0, 1},
   Increment = 0.1,
   Suffix = "Transparency",
   CurrentValue = 0,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
    ESPOutTrans = Value
    if ESPToggle then
         ESP(false)
    end
   end,
})
local Slider = Tab:CreateSlider({
   Name = "Fill transparency",
   Range = {0, 1},
   Increment = 0.1,
   Suffix = "Transparency",
   CurrentValue = 0.5,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
    ESPFillTrans = Value
    if ESPToggle then
         ESP(false)
         end
   end,
})
local Toggle = Tab:CreateToggle({
   Name = "ESP",
   CurrentValue = false,
   Flag = "Toggle2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   local V2
   if Value then
       V2 = false
    else
       V2 = true
   end
    ESP(V2)
   end,
})
local Table = {}
for i,k in pairs(workspace.Live:GetChildren()) do
if k:FindFirstChild("Humanoid") and k ~= game.Players.LocalPlayer.Character then
table.insert(Table,k.Name)
end
end
local Section = Tab:CreateSection("Others",true)
local Toggle = Tab:CreateToggle({
   Name = "Saitama Ultimate",
   CurrentValue = false,
   Flag = "Toggle3", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
 DCToggle = Value
print(DCToggle)
Start()
   end,
})
local Dropdown = Tab:CreateDropdown({
   Name = "Target",
   Options = Table,
   CurrentOption = "Select" ,
   MultiSelection = false, -- If MultiSelections is allowed
   Flag = "Dropdown1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Option)
   Target = Option
   end,
})

workspace.Live.ChildRemoved:Connect(function(k)
if Prints then
print(k.Name.." removed")
end
if k:FindFirstChild("Humanoid") and k ~= game.Players.LocalPlayer.Character then
Dropdown:Remove(k.Name)
end
end)
workspace.Live.ChildAdded:Connect(function(k)
task.wait(1)
if Prints then
print(k.Name.." added")
end
if k:FindFirstChild("Humanoid") and k ~= game.Players.LocalPlayer.Character then
Dropdown:Add(k.Name)
if ESPToggle then
ESP(false)
end
end
end)
local Button = Tab:CreateButton({
   Name = "Teleport to target",
   Interact = 'Click',
   Callback = function()
   Player.Character.HumanoidRootPart.CFrame = workspace.Live:FindFirstChild(Target).HumanoidRootPart.CFrame * CFrame.new(0,0,5)
   end,
})
local Keybind = Tab:CreateKeybind({
   Name = "Mountain",
   CurrentKeybind = "Z",
   HoldToInteract = false,
   Flag = "Keybind1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Keybind)
   TatsuPullTeleport(CFrame.new(-8.744277, 652.52124, -377.325531))
   end,
})
local Keybind = Tab:CreateKeybind({
   Name = "Mountain ( Solo )",
   CurrentKeybind = "X",
   HoldToInteract = false,
   Flag = "Keybind2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Keybind)
   Player.Character.HumanoidRootPart.CFrame = CFrame.new(-8.744277, 652.52124, -377.325531)
   end,
})
